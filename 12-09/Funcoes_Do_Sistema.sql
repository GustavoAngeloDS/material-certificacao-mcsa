USE ESTUDOS
GO

SET NOCOUNT ON
-- FUNÇÕES DO SISTEMA
-- @@ROWCOUNT
-- COMPRESS()
-- DECOMPRESS()
-- @@TRANCOUNT
-- ERROR_NUMBER()
-- @@ERROR
-- ERROR_MESSAGE()
-- NEWID()
-- ISNULL()
-- ISNUMERIC()
-- XACT_STATE()


-- EXEMPLO 1 : USO DO COMPRESS E DESCOMPRESS
DECLARE @NOME_CARRO VARCHAR(20)
SELECT 
  @NOME_CARRO = CARRO_DS_MODELO 
FROM 
  CARRO 
WHERE 
  CARRO_NR_ID = 1

SELECT 
  NOME_COMPRIMIDO, 
  CAST(DECOMPRESS(NOME_COMPRIMIDO) AS VARCHAR(20)) [NOME_DESCOMPRIMIDO] 
FROM (
  SELECT 
    COMPRESS(@NOME_CARRO) [NOME_COMPRIMIDO]
) AS TB1
GO

-- EXEMPLO 2 : USO DO @@ROWCOUNT
-- AO TERMINO DA EXECUÇÃO DA QUERY O @@ROWCOUNT EXIBE A QUANTIDADE DE LINHAS RETORNADAS DA ULTIMA CONSULTA
SELECT * FROM CARRO
SELECT @@ROWCOUNT [ROWCOUNT]
GO

-- EXEPLO 3 : @@TRANCOUNT
-- CONSEGUE RETORNAR A QUANTIDADE DE TRANSAÇÕES ABERTAS
BEGIN TRAN TR1
  SELECT 
    @@TRANCOUNT [TRANSACOES ABERTAS]
ROLLBACK TRAN TR1
SELECT
  @@TRANCOUNT [TRANSACOES ABERTAS]

-- EXEMPLO 4: ERROR_NUMBER, ERROR_MESSAGE, ERROR_LINE E @@ERROR
-- RETORNA O CÓDIGO DO ERRO QUE FOI LANÇADO, SUA MENSAGEM E A LINHA OND ELE FOI GERADO. 
-- GERALMENTE SÃO UTILIZADOS EM BLOCOS TRY CATCH EM STORED PROCEDURES PARA TRATAMENTO DE ERROS.

BEGIN TRY
  SELECT 1 / 0 [ERRO FORCADO]
END TRY
BEGIN CATCH
  SELECT 
    ERROR_NUMBER()  [ERROR_NUMBER],
	ERROR_MESSAGE() [ERROR_MESSAGE],
	ERROR_LINE()    [ERROR_LINE],
	@@ERROR         [@@ERROR]
END CATCH

-- EXEMPLO 5: NEWID
-- RESPONSÁVEL PELA CRIAÇÃO DE UM IDENTIFICADOR UNICO (GUID)
DECLARE @GUID CHAR(36)
SELECT 
  @GUID = NEWID()
SELECT 
  @GUID

-- EXEMPLO 6 : ISNULL()
-- É UMA ESPÉCIE DE COALESCE CONTUDO É LIMITADO A APENAS 2 PARÂMETROS.
-- UMA OBSERVAÇÃO IMPORTANTE É QUE, O ISNULL APENAS CONSEGUE APENAS CONSIDERAR O VALOR NÃO NULO DESDE QUE O MESMO SEJA COMPATÍVEL
-- COM A VARIÁVEL QUE ESTÁ SENDO VERIFICADA.
DECLARE @NUMERO NUMERIC(1)
SELECT 
  @NUMERO = NULL

SELECT 
  CASE 
    --WHEN ISNULL(@NUMERO, 10) = 10 THEN '@NUMERO É NULL!'
	-- O WHEN DESCRITO NA LINHA DE CIMA NÃO É EXECUTADO PQ A VARIÁVEL @NUMERO É LIMITADA A 1 NUMERO, CONTUDO O VALOR PROPOSTO PARA SOBRESCREVER
	-- O VALOR NULL CONTEM 2 DÍGITOS (OCASIONANDO UM ERRO DE EXECUÇÃO).
	  WHEN ISNULL(@NUMERO, 1) = 10 THEN '@NUMERO É NULL!'
    ELSE '@NUMERO NÃO É NULL!' 
  END

-- EXEMPLO 7 : ISNUMERIC()
-- VERIFICA SE O PARÂMETRO INFORMADO PARA A FUNÇÃO É UM NÚMERO (PODE SER INTEIRO OU DECIMAL)
SELECT 
  CASE
    WHEN ISNUMERIC('A') = 1 THEN 'A É NUMERICO'
	WHEN ISNUMERIC(12) = 1 THEN '12 É NUMERICO'
  END

-- EXEMPLO 8 : XACT_STATE()
-- REALIZA A VERIFICAÇÃO DO ESTADO DE UMA TRANSAÇÃO JÁ ABERTA (1 = COMMITAVEL; 0 = NÃO TEM TRANSAÇÃO ABERTA; -1 = NÃO É POSSÍVEL COMMITAR)
-- GERALMENTE É UTILIZADA DENTRO DOS BLOCOS TRY CATCH PARA CHEGAR O STATUS DA TRANSAÇÃO ANTES DO COMMIT OU ROLLBACK
BEGIN TRY
  BEGIN TRANSACTION TR2
    SELECT 1 / 0
  COMMIT TRANSACTION TR2
END TRY
BEGIN CATCH
  IF XACT_STATE() = 1
  BEGIN
    PRINT 'COMMITANDO TRANSAÇÃO...'
    COMMIT TRANSACTION TR2
  END

  IF XACT_STATE() = -1
  BEGIN
    PRINT 'ROLLBACK TRANSAÇÃO'
	ROLLBACK TRANSACTION TR2
  END
END CATCH